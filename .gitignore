*.rbc
capybara-*.html
.rspec
/log
/tmp
/db/*.sqlite3
/db/*.sqlite3-journal
/public/system
/coverage/
/spec/tmp
**.orig
rerun.txt
pickle-email-*.html

# TODO Comment out these rules if you are OK with secrets being uploaded to the repo
config/initializers/secret_token.rb
# NOTE: config/secrets.yml must be uploaded to the repo for Heroku.
# config/secrets.yml

## Environment normalisation:
/.bundle
/vendor/bundle

# these should all be checked in to normalise the environment:
# Gemfile.lock, .ruby-version, .ruby-gemset

# unless supporting rvm < 1.11.0 or doing something fancy, ignore this:
.rvmrc

# if using bower-rails ignore default bower_components path bower.json files
/vendor/assets/bower_components
*.bowerrc
bower.json

# Ignore pow environment settings
.powenv

# Ignore the default SQLite database.
/db/*.sqlite3
/db/*.sqlite3-journal

# Ignore all logfiles and tempfiles.
/log/*
!/log/.keep
/tmp

# Ignore Spring files (used by Guard auto-testing framework).
/spring/*.pid

# ENV vars that are general to all environments should be stored and
# committed in the .env file. Environment specific ENV vars should be
# stored but not committed in .env.<that environment's name>. When you
# load a certain environment, dotenv will first load general ENV vars
# from .env, then load environment specific ENV vars from
# .env.<current environment>. Variables defined in .env.<current
# environment> will override any values set in .env or already defined
# in the environment.
#
# Commit only the .env file with development-only settings. This makes
# it easy for other developers to get started on the project without
# compromising credentials for other environments.
#
# Never commit sensitive information to a public repository!
#
# SOURCE: https://github.com/bkeepers/dotenv#multiple-rails-environments
.env.*
