# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

# SOURCE: http://stackoverflow.com/a/32358641
<% self.class.include Rails.application.routes.url_helpers %>

# SOURCE: http://brandonhilkert.com/blog/organizing-javascript-in-rails-application-with-turbolinks/
$(document).on 'page:change', ->
  do ( $$ = window.Basimilch, $ = jQuery ) ->

    equivalentInMilkLitersBasicUnit = <%= Subscription::EQUIVALENT_IN_MILK_LITERS_BASIC_UNIT %>
    equivalentInMilkLitersSupplementUnit = <%= Subscription::EQUIVALENT_IN_MILK_LITERS_SUPPLEMENT_UNIT %>
    flexibleLitersBasicUnit = <%= Subscription::FLEXIBLE_LITERS_BASIC_UNIT %>
    flexibleLitersSupplementUnit = <%= Subscription::FLEXIBLE_LITERS_SUPPLEMENT_UNIT %>
    $subscriptionTotalEquivalence = $('#subscription_total_equivalence')
    $equivalenceRow   = $('tr.total.new-subscription-items')
    $equivalenceLabel = $equivalenceRow.find('td.total-label')
    $equivalenceTotal = $equivalenceRow.find('td.total')

    $('#subscription_basic_units, #subscription_supplement_units').change ->
      basicUnits      = $('#subscription_basic_units').val()
      supplementUnits = $('#subscription_supplement_units').val()
      totalLiters     = equivalentInMilkLitersBasicUnit * basicUnits +
                        equivalentInMilkLitersSupplementUnit * supplementUnits
      flexibleLiters  = flexibleLitersBasicUnit * basicUnits +
                        flexibleLitersSupplementUnit * supplementUnits
      $subscriptionTotalEquivalence.updateVal (val) -> val.updateNumber(totalLiters, flexibleLiters)
      $equivalenceTotal.setData 'expected-total', flexibleLiters

    $equivalenceTotal.on 'datachange', ->
      $this = $(this)
      $equivalenceLabel.updateText (text) -> text.updateNumber $this.data('expected-total')
      $this.trigger 'recalculate-total'

    $equivalenceTotal.on 'recalculate-total', ->
      newTotal = $('td.item-milk-equivalence')
        .map -> $(this).data('item-equivalent-in-milk-liters')
        .get()
        .reduce (sum, val) -> sum + val
      $equivalenceTotal.updateText (text) -> text.updateNumber(newTotal)
      correctTotal = 0 + $equivalenceTotal.data('expected-total') == 0 + newTotal
      $equivalenceRow.toggleClass('success', correctTotal)
      $equivalenceRow.toggleClass('danger', !correctTotal)
      $('.form-buttons [type=submit]').attr('disabled', !correctTotal)

    $('td.item-milk-equivalence').on 'datachange', ->
      $this = $(this)
      newEquivalence = $this.text().updateNumber($this.data('item-equivalent-in-milk-liters'))
      $this.text(newEquivalence)
      $equivalenceTotal.trigger('recalculate-total')

    $('[id^=subscription_item_ids_and_quantities_]').change ->
      $this = $(this)
      $tr = $this.closest('tr')
      litersPerUnit = $tr.find('td.milk-equivalence-per-unit').data('equivalent-in-milk-liters')
      totalLiters = litersPerUnit * $this.val()
      $tr.find('td.item-milk-equivalence').setData('item-equivalent-in-milk-liters', totalLiters)
    .change() # Trigger change on page load to refresh counters.

    $commonPartLists = $('.common-part .content')
    commonPartInputCookieName = 'commonPartInput'
    $('#common-part-input')
      .val $$.cookie.get(commonPartInputCookieName)
      .change (e) ->
        $$.cookie.delete commonPartInputCookieName
        $$.cookie.set commonPartInputCookieName, e.target.value
      .on 'input', (e)->
        $commonPartLists.html $.map e.target.value.split('\n'), (line)->
          [product, description] = line.split(/\s*:\s*/)
          $('<li/>').text(description).prepend $('<strong/>').text(product)
      .trigger 'input'

    $noticeAlerts = $('.alert.notice')
    noticeInputCookieName = 'noticeInput'
    $('#notice-input')
      .val $$.cookie.get(noticeInputCookieName)
      .change (e) ->
        $$.cookie.delete noticeInputCookieName
        $$.cookie.set noticeInputCookieName, e.target.value
      .on 'input', (e)->
        $noticeAlerts
          .toggleClass 'hidden', e.target.value.length == 0
          .text e.target.value
      .trigger 'input'

    $$.setupFilterAction 'depot_lists_delivery_day_selector',
                         "<%= subscription_depot_lists_path %>",
                         "delivery_day"
